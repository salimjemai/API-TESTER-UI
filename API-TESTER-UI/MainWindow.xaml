<Window x:Class="API_TESTER_UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:API_TESTER_UI"
        mc:Ignorable="d"
        Title="API Tester"
        Height="400"
        Width="600"
        FontSize="20">
  <Window.Resources>
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    
    <!--This is the cws URL placeholder--> 
    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
      <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="AllowDrop" Value="true" />
      <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
      <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <TextBlock x:Name="placeHolderTextBlock"
                           Foreground="Gray"
                           Text="http://ServerName/CWS/"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Visibility="Collapsed" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
              </Trigger>
              <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
              </Trigger>
              <Trigger Property="Text" Value="">
                <Setter Property="Visibility" TargetName="placeHolderTextBlock" Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
            <Condition Property="IsSelectionActive" Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       StrokeDashArray="1 2"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       SnapsToDevicePixels="true"
                       StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <!-- These are the Login button style-->
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
      <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
      <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment"  Value="Center" />
      <Setter Property="Padding" Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding Text.Length, ElementName=schemaAliasNameText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=userNameText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=passwordText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=cwsUrlText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
              </Trigger>
              <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="FocusVisual1">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       SnapsToDevicePixels="true" StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383" />
    <!-- These are the Clear button style-->
    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
      <Setter Property="Background" Value="{StaticResource Button.Static.Background1}" />
      <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding Text.Length, ElementName=schemaAliasNameText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=userNameText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=passwordText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=cwsUrlText, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="IsEnabled" Value="True" />
              </DataTrigger>
              <Trigger Property="IsDefaulted" Value="False">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}" />
              </Trigger>
              <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <Grid Margin='0,1,0,-1' HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    <Grid.Background>
      <ImageBrush ImageSource="C:\Users\sjemai\Desktop\WPF\GitApps\API-TESTER-UI\API-TESTER-UI\Sources\mesh.jpg"
                  Stretch="UniformToFill" />
    </Grid.Background>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="20" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="20" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="20" />
      </Grid.RowDefinitions>
      <TextBlock Grid.Column="1"
                 Grid.Row="1"
                 FontSize="32"
                 Text="Login To CORRIDOR API"
                 Grid.ColumnSpan="3"
                 Margin="90,0,0,50"
                 Foreground="#FFF3F3F3" />
      <!--Schema alias name box-->
      <TextBlock Grid.Column="1"
                 Grid.Row="2"
                 Text="Schema Alias Name"
                 FontFamily="Segoe UI"
                 FontWeight="Bold"
                 Margin="0,0,0,15"
                 Foreground="#FFF3F3F3" />
      <TextBox x:Name="schemaAliasNameText"
               Grid.Column="2"
               Grid.Row="2"
               Width="275"
               Margin="10,0,0,15" />
      <!--user name box-->
      <TextBlock Grid.Column="1"
                 Grid.Row="3"
                 Text="User Name"
                 FontFamily="Segoe UI"
                 FontWeight="Bold"
                 Margin="0,0,0,15"
                 Foreground="#FFF3F3F3" />
      <TextBox x:Name="LoginID"
               Grid.Column="2"
               Grid.Row="3"
               Width="275"
               Margin="10,0,0,15" />
      <!-- Password block -->
      <TextBlock Grid.Column="1"
                 Grid.Row="4"
                 Text="Password"
                 FontFamily="Segoe UI"
                 FontWeight="Bold"
                 Margin="0,0,0,15"
                 Foreground="#FFF3F3F3" />
      <PasswordBox x:Name="LoginPasswordText"
                   Grid.Column="2"
                   Grid.Row="4"
                   Width="275"
                   Margin="10,0,0,15" />
      <!-- CWS URL block -->
      <TextBlock Grid.Column="1"
                 Grid.Row="5"
                 Text="CWS URL"
                 FontFamily="Segoe UI"
                 FontWeight="Bold"
                 Margin="0,0,0,15"
                 Foreground="#FFF3F3F3" />
      <TextBox Style="{DynamicResource TextBoxStyle1}"
               x:Name="cwsUrlText"
               Grid.Column="2"
               Grid.Row="5"
               Width="275"
               Margin="10,0,0,15" />
      <StackPanel Grid.Column="1"
                  Grid.Row="6"
                  Grid.ColumnSpan="4"
                  Orientation="Horizontal"
                  Margin="70,10,0,10">
        <!--Login button-->
        <Button Style="{DynamicResource ButtonStyle1}"
                x:Name="loginButton"
                Content="Login"
                Width="90"
                Margin="10"
                Click="LoginButton_OnClick" />
        <!--Logout button-->
        <Button x:Name="logoutButton"
                Content="Logout"
                Width="90"
                Margin="10"
                Click="LogoutButton_OnClick" />
        <!-- Cancel Button block -->
        <Button Style="{DynamicResource ButtonStyle2}"
                x:Name="clearButton"
                Content="Clear"
                Width="90"
                Margin="10"
                Click="ClearButton_OnClick" />
        <Button x:Name="cancelButton"
                Content="Cancel"
                Width="90"
                Margin="10"
                Click="CancelButton_OnClick" />
      </StackPanel>
    </Grid>
    <DockPanel>
      <Frame x:Name="_MainWindowFrame" NavigationUIVisibility="Hidden"/>
      <Frame x:Name="_ApiChoiceFrame" NavigationUIVisibility="Hidden" />
    </DockPanel>
    <!-- Login Button block -->
  </Grid>
</Window>
