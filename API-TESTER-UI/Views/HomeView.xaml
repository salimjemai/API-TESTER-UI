<Window x:Class="API_TESTER_UI.Views.HomeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:API_TESTER_UI="clr-namespace:API_TESTER_UI.Views"
        mc:Ignorable="d"
        Name="window"
        Title="API Tester"
        Height="400"
        Width="600"
        FontSize="20">
  <Window.Resources>
    <SolidColorBrush x:Key="TextBox.Static.Border"
                     Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border"
                     Color="#FF569DE5" />
    <!--This is the cws URL placeholder-->
    <Style x:Key="TextBoxStyle1"
           TargetType="{x:Type TextBox}">
      <Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource TextBox.Static.Border}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="KeyboardNavigation.TabNavigation"
              Value="None" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="FocusVisualStyle"
              Value="{x:Null}" />
      <Setter Property="AllowDrop"
              Value="true" />
      <Setter Property="ScrollViewer.PanningMode"
              Value="VerticalFirst" />
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <TextBlock x:Name="placeHolderTextBlock"
                           Foreground="DarkGray"
                           HorizontalAlignment="Center"
                           Text="http://ServerName/CWS/"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Visibility="Collapsed" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Opacity"
                        TargetName="border"
                        Value="0.56" />
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.MouseOver.Border}" />
              </Trigger>
              <Trigger Property="IsKeyboardFocused"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.Focus.Border}" />
              </Trigger>
              <Trigger Property="Text"
                       Value="">
                <Setter Property="Visibility"
                        TargetName="placeHolderTextBlock"
                        Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsInactiveSelectionHighlightEnabled"
                       Value="true" />
            <Condition Property="IsSelectionActive"
                       Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="SelectionBrush"
                  Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       StrokeDashArray="1 2"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       SnapsToDevicePixels="true"
                       StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border"
                     Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="#FF838383" />
    <!-- These are the Login button style-->
    <Style x:Key="ButtonStyle1"
           TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle"
              Value="{StaticResource FocusVisual}" />
      <Setter Property="Background"
              Value="{StaticResource Button.Static.Background}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource Button.Static.Border}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="0" />
      <Setter Property="HorizontalContentAlignment"
              Value="Center" />
      <Setter Property="VerticalContentAlignment"
              Value="Center" />
      <Setter Property="Padding"
              Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border"
                    CornerRadius="10"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding Text.Length, ElementName=schemaAliasNameText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=userNameText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=passwordText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=cwsUrlText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="False" />
              </DataTrigger>
              <Trigger Property="IsDefaulted"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#EAB01E" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#EAB01E" />
              </Trigger>
              <Trigger Property="IsPressed"
                       Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#F1CA68" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#F1CA68" />
              </Trigger>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground"
                        TargetName="contentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="FocusVisual1">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       StrokeDashArray="1 2"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       SnapsToDevicePixels="true"
                       StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background1"
                     Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border1"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background1"
                     Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border1"
                     Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background1"
                     Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border1"
                     Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background1"
                     Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border1"
                     Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground1"
                     Color="#FF838383" />
    <!-- These are the Clear button style-->
    <Style x:Key="ButtonStyle2"
           TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle"
              Value="{StaticResource FocusVisual1}" />
      <Setter Property="Background"
              Value="{StaticResource Button.Static.Background1}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource Button.Static.Border1}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="0" />
      <Setter Property="HorizontalContentAlignment"
              Value="Center" />
      <Setter Property="VerticalContentAlignment"
              Value="Center" />
      <Setter Property="Padding"
              Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border"
                    CornerRadius="10"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding Text.Length, ElementName=schemaAliasNameText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=userNameText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=passwordText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="True" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Text.Length, ElementName=cwsUrlText, UpdateSourceTrigger=PropertyChanged}"
                           Value="0">
                <Setter Property="IsEnabled"
                        Value="True" />
              </DataTrigger>
              <Trigger Property="IsDefaulted"
                       Value="False">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#EAB01E" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#EAB01E" />
              </Trigger>
              <Trigger Property="IsPressed"
                       Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#F1CA68" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#F1CA68" />
              </Trigger>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Background1}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Border1}" />
                <Setter Property="TextElement.Foreground"
                        TargetName="contentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground1}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border1"
                     Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border1"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border1"
                     Color="#FF569DE5" />
    <!--These are the Password text box style-->
    <Style x:Key="{x:Type PasswordBox}"
           TargetType="{x:Type PasswordBox}">
      <Setter Property="API_TESTER_UI:PasswordBoxMonitor.IsMonitoring"
              Value="True" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type PasswordBox}">
            <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    SnapsToDevicePixels="true">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Text="Password"
                           Margin="4, 2, 0, 0"
                           TextAlignment="Center"
                           Foreground="DarkGray"
                           Visibility="Collapsed"
                           Name="txtPrompt" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
              <Trigger Property="API_TESTER_UI:PasswordBoxMonitor.PasswordLength"
                       Value="0">
                <Setter Property="Visibility"
                        TargetName="txtPrompt"
                        Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!--User Name Text Box Style-->
    <Style x:Key="UserNameTextBoxStyle"
           TargetType="{x:Type TextBox}">
      <Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource TextBox.Static.Border}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="KeyboardNavigation.TabNavigation"
              Value="None" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="FocusVisualStyle"
              Value="{x:Null}" />
      <Setter Property="AllowDrop"
              Value="true" />
      <Setter Property="ScrollViewer.PanningMode"
              Value="VerticalFirst" />
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <TextBlock x:Name="placeHolderTextBlock"
                           Foreground="DarkGray"
                           HorizontalAlignment="Center"
                           Text="User Name"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Visibility="Collapsed" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Opacity"
                        TargetName="border"
                        Value="0.56" />
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.MouseOver.Border}" />
              </Trigger>
              <Trigger Property="IsKeyboardFocused"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.Focus.Border}" />
              </Trigger>
              <Trigger Property="Text"
                       Value="">
                <Setter Property="Visibility"
                        TargetName="placeHolderTextBlock"
                        Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsInactiveSelectionHighlightEnabled"
                       Value="true" />
            <Condition Property="IsSelectionActive"
                       Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="SelectionBrush"
                  Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border3"
                     Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border3"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border3"
                     Color="#FF569DE5" />
    <!--Schema Alias Name Text Box style-->
    <Style x:Key="SchemaAliasTextBoxStyle"
           TargetType="{x:Type TextBox}">
      <Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource TextBox.Static.Border}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="KeyboardNavigation.TabNavigation"
              Value="None" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="FocusVisualStyle"
              Value="{x:Null}" />
      <Setter Property="AllowDrop"
              Value="true" />
      <Setter Property="ScrollViewer.PanningMode"
              Value="VerticalFirst" />
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <TextBlock x:Name="placeHolderTextBlock"
                           Foreground="DarkGray"
                           HorizontalAlignment="Center"
                           Text="Schema Alias Name"
                           FontSize="{TemplateBinding FontSize}"
                           FontFamily="{TemplateBinding FontFamily}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Visibility="Collapsed" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Opacity"
                        TargetName="border"
                        Value="0.56" />
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.MouseOver.Border}" />
              </Trigger>
              <Trigger Property="IsKeyboardFocused"
                       Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource TextBox.Focus.Border}" />
              </Trigger>
              <Trigger Property="Text"
                       Value="">
                <Setter Property="Visibility"
                        TargetName="placeHolderTextBlock"
                        Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsInactiveSelectionHighlightEnabled"
                       Value="true" />
            <Condition Property="IsSelectionActive"
                       Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="SelectionBrush"
                  Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>
  <Grid Margin='0,1,0,-1'
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="29*" />
      <ColumnDefinition Width="171*" />
    </Grid.ColumnDefinitions>
    <Grid.Background>
      <ImageBrush ImageSource="..\Sources\aircraft.jpg"
                  Stretch="UniformToFill" />
    </Grid.Background>
    <Grid Grid.ColumnSpan="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid Grid.Row="1"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Margin="0 10 0 20">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="1"
                   FontSize="32"
                   Text="Login To CORRIDOR API"
                   TextAlignment="Center"
                   Margin="0,0,0,30"
                   Foreground="NavajoWhite" />
        <!--Schema alias name box-->
        <TextBox Style="{DynamicResource SchemaAliasTextBoxStyle}"
                 x:Name="schemaAliasNameText"
                 Grid.Column="1"
                 Grid.Row="2"
                 Width="275"
                 Margin="10,0,0,15" />
        <!--user name box-->
        <TextBox Style="{DynamicResource UserNameTextBoxStyle}"
                 x:Name="LoginID"
                 Grid.Column="1"
                 Grid.Row="3"
                 Width="275"
                 Margin="10,0,0,15" />
        <!-- Password block -->
        <PasswordBox x:Name="LoginPasswordText"
                     Grid.Row="4"
                     Width="275"
                     Margin="37,0,0,15"
                     HorizontalAlignment="Left" />
        <!-- CWS URL block -->
        <TextBox Style="{DynamicResource TextBoxStyle1}"
                 Grid.Column="1"
                 Grid.Row="5"
                 x:Name="cwsUrlText"
                 Width="275"
                 Margin="10,0,0,15" />
      </Grid>
      <StackPanel Grid.ColumnSpan="3"
                  Grid.Row="2"
                  Orientation="Horizontal"
                  HorizontalAlignment="Center">
        <!--Login button-->
        <Button x:Name="loginButton2"
                Content="Login Temp"
                Width="120"
                Height="40"
                Margin="10"
                Click="loginButton2_Click" />
        <Button Style="{DynamicResource ButtonStyle1}"
                x:Name="loginButton"
                Content="Login"
                Width="98"
                Height="40"
                Margin="10"
                Click="LoginButton_OnClick" />
        <!-- Clear Button block -->
        <Button Style="{DynamicResource ButtonStyle2}"
                x:Name="clearButton"
                Content="Clear"
                Width="98"
                Height="40"
                Margin="10"
                Click="ClearButton_OnClick" />
        <!--Close Button block-->
        <Button x:Name="cancelButton"
                Content="Close"
                Width="98"
                Height="40"
                Margin="10"
                Click="CancelButton_OnClick" />
      </StackPanel>
    </Grid>
    <Frame x:Name="_HomeViewFrame"
           NavigationUIVisibility="Hidden"
           Grid.ColumnSpan="2" />
    <Frame x:Name="_ApiChoiceFrame"
           NavigationUIVisibility="Hidden"
           Grid.ColumnSpan="2" />
    <!-- Login Button block -->
  </Grid>
</Window>
